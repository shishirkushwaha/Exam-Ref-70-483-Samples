using System.Collections.Generic;

namespace ExamRef70483.ManageProgramFlow.ImplementProgramFlow
{
    public class Listing1P73
    {
        /// <summary>
        /// This code depicts what code is generated by compiler internally for foreach loop in 1P72
        /// </summary>
        public static void CompilerGeneratedCodeForForeach()
        {
            var people = new List<Person>()
            {
                new Person() {FirstName = "Jhon", LastName = "Doe"},
                new Person() {FirstName = "Jane", LastName = "Doe"}
            };

            List<Person>.Enumerator e = people.GetEnumerator();

            try
            {
                Person v;
                while (e.MoveNext())
                {
                    //If here we change the value of e.Current, 
                    //the iterator pattern cannot detemine what to do on next step.
                    //And thus in corresponding foreach loop the value assigning to variables in not allowed.
                    v = e.Current;
                }
            }
            finally
            {
                System.IDisposable d = e as System.IDisposable;
                d.Dispose();
            }
        }
    }
}